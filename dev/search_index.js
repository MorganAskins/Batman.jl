var documenterSearchIndex = {"docs":
[{"location":"#","page":"Home","title":"Home","text":"Author = \"Morgan Askins\"","category":"page"},{"location":"#Batman.jl-1","page":"Home","title":"Batman.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"The Bayesian Analysis Toolkit for Monitoring  Anti-Neutrinos, is a package designed to perform statistical analysis on small datasets in a generic way. The user may decide the type of analysis to be performed including the posterior and prior probability distributions, all while naturally including nuisance parameters (such as systematic uncertainties).","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Source code available:  github.com/MorganAskins/Batman.jl","category":"page"},{"location":"#Package-features-1","page":"Home","title":"Package features","text":"","category":"section"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Currently Batman.jl is not registered with METADATA.jl so a direct link to the source is required by Pkg.jl.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.add(PackageSpec(url=\"https://github.com/MorganAskins/Batman.jl\"))","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Or using the Pkg.jl REPL","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> ]\n(v1.x) pkg> add https://github.com/MorganAskins/Batman.jl","category":"page"},{"location":"#Batsignal-1","page":"Home","title":"Batsignal","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Logo for Batman.jl based on ","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using PyPlot\np(x, f) = fill_between(x, f.(x), color=\"black\" )\n\nfunction bat(x; positive=true)\n    H(x) = x >= 0 ? 1.0 : 0.0\n    σ(x) = @. √(1-x^2.0)\n    e(x) = @. 3σ(x/7.0)\n    s(x) = @. 4.2 - 0.5x - 2.8σ(0.5x-0.5)\n    b(x) = @. σ(abs(2-x)-1)-x.^2/11 + 0.5x - 3\n    q(x) = @. 7.5*x*sign(-x) + 8.4\n    j(x) = @. -3.0*x*sign(-x) + 0.2\n    k(x) = @. 1.7\n    c(x) = [1.7, 1.7, 2.6, 0.9]\n    if positive\n        if abs(x)>7\n            return 0\n        elseif abs(x) > 3\n            return e.(abs.(x))\n        elseif abs(x) > 1\n            return s.(abs.(x))\n        elseif abs(x) > 0.8\n            return q(x)\n        elseif abs(x) > 0.5\n            return j(x)\n        else\n            return k(x)\n        end\n    else\n        if abs(x)>7\n            return 0\n        elseif abs(x) > 4\n            return -e.(abs.(x))\n        else\n            return b(abs.(x))\n        end\n    end\nend\n\np(-7:0.01:7, a->bat(a; positive=false) )\np(-7:0.01:7, a->bat(a; positive=true) )","category":"page"},{"location":"#","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"lib/batman/#Batman-1","page":"Batman","title":"Batman","text":"","category":"section"},{"location":"lib/batman/#","page":"Batman","title":"Batman","text":"Modules = [Batman]","category":"page"},{"location":"lib/batman/#Batman.Batman","page":"Batman","title":"Batman.Batman","text":"Batman\n\nJulia library designed to build statistical models with associated systematic uncertainties and provide inference into particular parameters of interest. Both Bayesian and Frequentist analysis are supported.\n\n\n\n\n\n","category":"module"},{"location":"lib/batman/#Batman.Model","page":"Batman","title":"Batman.Model","text":"abstract type Model\n\nModels hold the parameters of interest and the associated likelihood/cost functions used in optimization. Individual models should be derived from this base object.\n\n\n\n\n\n","category":"type"},{"location":"lib/batman/#Batman.NLogLikelihood","page":"Batman","title":"Batman.NLogLikelihood","text":"NLogLikelihood(pf::Array{NLogPDF})\n\nGiven an array of NLogPDF, a complete negative log-likelihood function is contructed which can then be passed to a minimizer.\n\n\n\n\n\n","category":"type"},{"location":"lib/batman/#Batman.NLogPDF","page":"Batman","title":"Batman.NLogPDF","text":"NLogPDF(f::String, p::Variable...)\n\nNegative log PDF used when contructing the complete likelihood function. The NLogPDF should have a unique name f::String.\n\n\n\n\n\n","category":"type"},{"location":"lib/batman/#Batman.Results","page":"Batman","title":"Batman.Results","text":"Results\n\nCreated upon optimizing a model, contains the model and all of its parameters as well as the optimized results found by minimizing the cost function.\n\n\n\n\n\n","category":"type"},{"location":"lib/batman/#Batman.add_dataset-Tuple{Any,DataFrames.DataFrame}","page":"Batman","title":"Batman.add_dataset","text":"@add_dataset(name, df::DataFrame)\n\nIntroduce a new dataset into the namespace at read-time.\n\n\n\n\n\n","category":"method"},{"location":"lib/batman/#Batman.lognormal-Tuple{Any,Any,Any}","page":"Batman","title":"Batman.lognormal","text":"lognormal(x, μ, σ)\n\nfrac(x-μ)^22σ^2\n\n\n\n\n\n","category":"method"},{"location":"lib/batman/#Batman.logpoisson-Tuple{Any,Vararg{Any,N} where N}","page":"Batman","title":"Batman.logpoisson","text":"logpoisson(n, x...)\n\n  λ  0 \n  λ = sum(x)\n  λ - n*log(λ) + n*log(n) - n\n\nmath\n\n\n\n\n\n","category":"method"},{"location":"lib/batman/#Batman.optimize_model!-Tuple{Model,NLogLikelihood}","page":"Batman","title":"Batman.optimize_model!","text":"optimizemodel!(m::Model, nll::NLogLikelihood;   lowerbounds=nothing, upper_bounds=nothing)\n\nCurrently NLopt is used for minimizing the objective function. optimizemodel! produces the objective function from the given NLogLikelihood which is then passed to NLopt to be minimized. optimizemodel! returns a set of Results.\n\n\n\n\n\n","category":"method"},{"location":"lib/batman/#Batman.@addfunction-Tuple{Any}","page":"Batman","title":"Batman.@addfunction","text":"@addfunction f\n\nUsing @addfunction will write in a new function into the current namespace at read-time.\n\nExamples\n\naddfunction lognormalconstraint(x, μ, σ) = (x-μ)^2/2/σ\n\n\n\n\n\n","category":"macro"}]
}
